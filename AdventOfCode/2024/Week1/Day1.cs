using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace AdventOfCode._2024
{
    internal class Day1() : Problem("3   4\r\n4   3\r\n2   5\r\n1   3\r\n3   9\r\n3   3",
        "58789   28882\r\n27059   23721\r\n86784   91527\r\n72958   13217\r\n95228   20832\r\n77437   82573\r\n33685   76537\r\n99368   67870\r\n41094   34696\r\n70702   18298\r\n67914   76275\r\n60325   84734\r\n25043   31692\r\n59623   47605\r\n57390   23721\r\n68803   36898\r\n24268   14581\r\n65399   63078\r\n97762   19390\r\n50114   28539\r\n88373   35451\r\n49024   61813\r\n96953   63691\r\n43964   50579\r\n84426   60331\r\n76079   13172\r\n22861   38715\r\n91048   87550\r\n74780   34297\r\n49960   72835\r\n91972   50079\r\n52862   63078\r\n62546   78927\r\n92384   70747\r\n80234   20439\r\n98465   98833\r\n34696   26663\r\n84984   85013\r\n32047   94866\r\n20926   91132\r\n79049   79638\r\n61387   75742\r\n40584   67646\r\n92492   99117\r\n37042   13172\r\n24478   21558\r\n10848   51254\r\n96010   50300\r\n21014   29228\r\n89706   80794\r\n51308   21014\r\n87493   91132\r\n20912   77537\r\n27054   39926\r\n57804   54388\r\n47423   87284\r\n68652   84795\r\n86295   42891\r\n49216   80777\r\n25463   20439\r\n20700   33848\r\n48643   41770\r\n73701   35843\r\n81231   45686\r\n43227   45195\r\n22496   63694\r\n98833   70485\r\n54707   30431\r\n24668   21558\r\n69702   90163\r\n82025   33804\r\n40061   11701\r\n16121   91132\r\n64440   22580\r\n79108   44508\r\n51027   21558\r\n68719   20439\r\n23563   50579\r\n83622   95053\r\n57297   46927\r\n61983   39502\r\n12603   34784\r\n23669   53745\r\n52072   34297\r\n78049   75669\r\n23990   87858\r\n22137   90163\r\n90938   18517\r\n55725   90031\r\n59993   74012\r\n54578   85675\r\n92115   46927\r\n38969   47605\r\n81101   10287\r\n93794   75669\r\n64839   36867\r\n47311   12161\r\n78166   76537\r\n87125   50079\r\n66623   25465\r\n88110   98681\r\n72660   75592\r\n41748   37738\r\n91564   41306\r\n12219   62821\r\n60138   52717\r\n54590   32212\r\n62975   85753\r\n61842   35300\r\n26272   39516\r\n27007   76251\r\n48169   63474\r\n94898   88451\r\n22706   26762\r\n56283   76537\r\n29521   84894\r\n36845   90163\r\n88825   90163\r\n29862   21377\r\n81174   69137\r\n13711   34297\r\n53878   51226\r\n87590   79980\r\n99631   76585\r\n82834   45447\r\n78342   19644\r\n28790   72524\r\n36906   75669\r\n14336   58221\r\n76519   77427\r\n87574   24390\r\n63709   60766\r\n39632   36400\r\n29645   98833\r\n81798   34297\r\n81713   86165\r\n22679   90967\r\n38591   20490\r\n14714   93340\r\n14080   18923\r\n63166   50079\r\n13932   17906\r\n83688   78371\r\n90711   39189\r\n90434   96758\r\n71866   25445\r\n28566   22989\r\n20439   20760\r\n37224   25649\r\n77827   76115\r\n64745   37738\r\n26417   73446\r\n64271   16805\r\n81563   36867\r\n12278   85758\r\n15257   43127\r\n97652   21570\r\n10946   77315\r\n81470   37738\r\n47816   63078\r\n29783   52739\r\n62569   63078\r\n71904   21741\r\n55555   54934\r\n30111   64622\r\n97322   59047\r\n84274   48025\r\n25514   69909\r\n19013   20439\r\n84608   13683\r\n99317   36003\r\n77083   76360\r\n14626   96966\r\n50572   14581\r\n21558   60518\r\n68710   52504\r\n50579   44922\r\n98946   15999\r\n57049   13900\r\n34217   76875\r\n88561   63078\r\n38428   49321\r\n35301   46430\r\n68659   44724\r\n78548   21014\r\n38423   47605\r\n25602   76689\r\n26663   61754\r\n39416   67964\r\n35875   55373\r\n23721   58152\r\n58006   83208\r\n52580   62998\r\n95373   50079\r\n12865   76537\r\n72652   20439\r\n78586   31055\r\n94022   58221\r\n25025   98833\r\n42121   50579\r\n87831   45945\r\n48850   64807\r\n83055   87840\r\n52315   96758\r\n93089   68844\r\n25700   23721\r\n72511   20439\r\n39725   34297\r\n80667   34696\r\n70151   33255\r\n92383   96596\r\n55177   51420\r\n59932   32699\r\n42058   98833\r\n56115   54523\r\n44800   78852\r\n74334   85797\r\n12524   49766\r\n88761   60104\r\n83983   65193\r\n29874   86165\r\n57987   37738\r\n99851   83353\r\n33458   21014\r\n79218   27405\r\n59543   44536\r\n21709   54522\r\n19922   66820\r\n41425   76644\r\n13866   61703\r\n49725   34696\r\n51423   17935\r\n59245   27541\r\n87806   62519\r\n79982   11295\r\n28132   69809\r\n56313   26663\r\n37423   50079\r\n21631   61107\r\n90163   50079\r\n64701   13172\r\n69835   47605\r\n63939   47605\r\n69441   37738\r\n90631   30666\r\n54776   13172\r\n25224   45822\r\n82457   24534\r\n92005   13172\r\n18636   14581\r\n66705   90163\r\n57104   54522\r\n48735   97135\r\n94866   66203\r\n83090   89376\r\n40897   54522\r\n88797   42310\r\n85498   58221\r\n30190   63410\r\n66064   12908\r\n29791   61813\r\n66255   83043\r\n41250   83934\r\n94161   92546\r\n54325   55163\r\n45766   37252\r\n33824   65193\r\n45441   80901\r\n85065   90163\r\n15504   57097\r\n91128   13172\r\n47086   83158\r\n62989   71264\r\n46684   36273\r\n21394   56793\r\n85025   95859\r\n30167   20640\r\n63007   15741\r\n92712   65193\r\n90022   96758\r\n64112   34297\r\n32922   91132\r\n82947   54436\r\n27408   63886\r\n92065   47605\r\n60699   20439\r\n45185   86010\r\n81565   51093\r\n43850   76537\r\n90819   33508\r\n67506   37738\r\n40142   34696\r\n59876   33440\r\n73904   38458\r\n21431   59114\r\n85880   42652\r\n75274   87983\r\n63975   75849\r\n42859   63535\r\n45645   90967\r\n34062   61999\r\n41145   54522\r\n58221   76199\r\n41790   54732\r\n34067   87542\r\n75883   49363\r\n64882   21014\r\n92004   78473\r\n54170   26663\r\n53032   65307\r\n41443   86165\r\n24191   65193\r\n68372   61813\r\n62823   18816\r\n92170   21014\r\n79184   93815\r\n38988   20439\r\n16245   34696\r\n61971   17725\r\n58462   61813\r\n13669   37284\r\n95491   50170\r\n80368   12991\r\n54437   40865\r\n49667   91132\r\n57601   60331\r\n36103   94892\r\n61752   46307\r\n87154   62129\r\n11458   35248\r\n95020   75669\r\n74407   80757\r\n76364   90967\r\n74924   79609\r\n74178   79192\r\n28787   20439\r\n30643   47605\r\n97779   64469\r\n18060   14581\r\n33280   66457\r\n19928   14867\r\n16465   21558\r\n96623   49569\r\n35706   36845\r\n19824   63236\r\n79474   37738\r\n46368   54936\r\n81026   94866\r\n74845   92731\r\n87992   36248\r\n10511   91369\r\n17541   91132\r\n99200   54882\r\n92088   26663\r\n30102   96758\r\n95669   82527\r\n31323   37738\r\n49087   72236\r\n13654   58221\r\n41957   29009\r\n69672   60755\r\n73457   45040\r\n69851   76537\r\n51708   72524\r\n81752   73194\r\n42100   44337\r\n65676   34696\r\n67173   98833\r\n56955   90163\r\n47605   90973\r\n56609   14581\r\n96803   60138\r\n20037   74800\r\n84578   13172\r\n73603   60215\r\n26774   63078\r\n69717   60331\r\n25769   31133\r\n65193   33467\r\n68993   86165\r\n31290   58673\r\n35905   12645\r\n75221   21014\r\n71743   94866\r\n15429   51324\r\n88883   76537\r\n53273   60331\r\n53474   94866\r\n30423   53459\r\n87208   45513\r\n21922   76537\r\n56981   34297\r\n84407   82475\r\n92502   72524\r\n44701   54936\r\n37137   15727\r\n46656   91132\r\n85169   54544\r\n42787   85847\r\n32009   15438\r\n76537   60331\r\n75936   63078\r\n64069   94866\r\n94775   50579\r\n11066   37007\r\n96942   12552\r\n39943   19339\r\n99820   10453\r\n82222   60331\r\n67201   90967\r\n45047   73382\r\n52846   42760\r\n31925   87519\r\n75095   91207\r\n67559   86165\r\n70255   61609\r\n14881   48739\r\n66111   50079\r\n52776   94850\r\n48217   18408\r\n27533   10938\r\n76862   20439\r\n93730   49950\r\n19119   98833\r\n20793   20778\r\n28844   53836\r\n75809   26663\r\n79954   87261\r\n89143   60138\r\n15920   94866\r\n98309   54522\r\n61390   34297\r\n91590   61813\r\n36942   75380\r\n43612   21014\r\n62280   76806\r\n81905   20049\r\n69500   17817\r\n30016   54522\r\n37738   24841\r\n97736   76537\r\n95453   60331\r\n83841   83825\r\n89661   37221\r\n54880   38461\r\n30171   58221\r\n43651   48482\r\n32991   50079\r\n77834   72467\r\n86698   60331\r\n54669   75669\r\n86168   47151\r\n20582   34297\r\n63078   61813\r\n40364   96758\r\n48964   86751\r\n91274   65761\r\n23554   60331\r\n62116   20439\r\n47249   14581\r\n65442   86165\r\n87647   54528\r\n67752   90166\r\n69385   72524\r\n35212   14581\r\n55866   34308\r\n86864   38899\r\n17913   93044\r\n70472   90163\r\n78816   52312\r\n74722   68941\r\n69344   34297\r\n69289   43658\r\n67116   77640\r\n17178   38466\r\n54049   16342\r\n10096   88031\r\n10933   22940\r\n17904   90967\r\n73750   53331\r\n24618   32163\r\n55226   23074\r\n95001   12994\r\n77839   14600\r\n57111   61813\r\n24177   98351\r\n86576   13172\r\n44614   96758\r\n81490   88939\r\n24759   20977\r\n11287   50079\r\n74785   76689\r\n27583   37822\r\n30172   45526\r\n89894   47983\r\n42508   54522\r\n25556   75669\r\n18793   91132\r\n32941   47773\r\n99728   34967\r\n28210   10047\r\n27008   19170\r\n84393   66307\r\n65829   21014\r\n49816   56988\r\n73908   60364\r\n22824   49783\r\n27756   33047\r\n84212   28530\r\n51194   30445\r\n50248   66503\r\n13587   69771\r\n54561   21830\r\n14733   36879\r\n53055   76537\r\n31145   26316\r\n16865   56614\r\n96415   36845\r\n87252   75073\r\n58918   14581\r\n43096   36375\r\n27809   20695\r\n76384   34297\r\n90593   86165\r\n94850   36867\r\n84649   63153\r\n70914   46927\r\n37245   60331\r\n15256   15850\r\n95830   76537\r\n72468   22864\r\n68165   25805\r\n49990   58221\r\n30245   55581\r\n80177   89723\r\n19102   25749\r\n60883   54936\r\n94584   21014\r\n11629   65193\r\n83942   86493\r\n98428   20005\r\n29707   96758\r\n36468   54522\r\n86820   76537\r\n21262   59570\r\n60331   34966\r\n29379   94850\r\n48953   90163\r\n73148   58221\r\n97913   21558\r\n24039   13439\r\n43317   34297\r\n34623   21014\r\n14581   80148\r\n97267   16045\r\n29237   67529\r\n83091   91132\r\n46331   47605\r\n69602   98833\r\n28519   77331\r\n14318   24668\r\n26144   90967\r\n28648   60331\r\n37188   47605\r\n95949   50579\r\n44407   16380\r\n49859   58221\r\n46623   76629\r\n75981   62015\r\n57484   81117\r\n85229   73269\r\n82977   50579\r\n10758   23721\r\n10279   94850\r\n37576   53461\r\n94624   50982\r\n95947   60331\r\n69892   23721\r\n81444   21014\r\n13092   26573\r\n14868   50079\r\n33930   58282\r\n57471   62978\r\n72588   78073\r\n41668   50079\r\n10306   50079\r\n87273   77847\r\n41744   23721\r\n35868   91132\r\n53133   43979\r\n75783   54936\r\n10074   35689\r\n53205   96758\r\n92488   52569\r\n38198   90163\r\n20120   90111\r\n78344   94850\r\n99876   13172\r\n69062   72097\r\n43840   72694\r\n48500   13273\r\n59750   68279\r\n67216   19658\r\n16906   50579\r\n98034   88469\r\n41621   72071\r\n93818   23721\r\n61664   13602\r\n45369   44961\r\n20507   28776\r\n82793   90163\r\n87708   50079\r\n36898   98833\r\n52570   90163\r\n36679   65193\r\n26649   50079\r\n75507   47605\r\n31553   94257\r\n17591   31585\r\n22067   81225\r\n48812   23721\r\n49198   56618\r\n26002   34983\r\n42947   98833\r\n12950   59924\r\n71406   17446\r\n22795   29922\r\n87872   63355\r\n78226   34297\r\n94380   22491\r\n56778   96093\r\n63451   45416\r\n16336   49990\r\n20682   12570\r\n41020   83481\r\n73814   25139\r\n82170   78735\r\n25087   65193\r\n30733   98833\r\n70801   86165\r\n31083   19553\r\n87063   98719\r\n42217   72138\r\n10510   78912\r\n56707   91456\r\n13172   71270\r\n53337   90208\r\n25513   92697\r\n39676   63037\r\n48497   90932\r\n98346   83722\r\n17160   26663\r\n14191   79977\r\n86557   31093\r\n12936   13172\r\n66657   88491\r\n14496   14581\r\n10452   14581\r\n27873   76537\r\n57301   18372\r\n84746   96108\r\n11640   34696\r\n11240   16854\r\n13244   14581\r\n29407   64574\r\n72524   76537\r\n70776   93370\r\n78168   58221\r\n45118   76537\r\n95654   56763\r\n63910   37738\r\n52213   50079\r\n71429   35239\r\n55261   80239\r\n40819   60331\r\n77021   87902\r\n62939   54522\r\n43136   58221\r\n54571   77272\r\n61525   24668\r\n78329   77956\r\n16417   34696\r\n24710   12753\r\n98654   88262\r\n11417   43676\r\n97222   93882\r\n36533   32918\r\n63037   23721\r\n33935   76689\r\n85633   50622\r\n53326   22895\r\n38602   34696\r\n64320   45677\r\n84394   20619\r\n22214   75828\r\n40603   90163\r\n12038   72225\r\n91760   76568\r\n30962   72524\r\n69928   34696\r\n91548   33221\r\n61270   90163\r\n52543   21014\r\n96907   50445\r\n94862   10606\r\n36867   21252\r\n78178   58229\r\n96175   89174\r\n18313   34297\r\n29518   72524\r\n47176   14117\r\n16043   11676\r\n98613   99098\r\n24524   67759\r\n50079   16991\r\n50392   76537\r\n96483   37738\r\n23704   98833\r\n79804   76689\r\n59352   96758\r\n28734   94850\r\n66932   23721\r\n84652   58221\r\n81233   58221\r\n61813   23721\r\n39414   75107\r\n61577   90199\r\n52142   72213\r\n99269   74680\r\n65597   91623\r\n76283   21620\r\n59366   98833\r\n96758   96758\r\n34965   34696\r\n53408   84822\r\n15500   41951\r\n47748   39439\r\n21807   76689\r\n43690   33261\r\n58602   34696\r\n64122   90967\r\n54427   26663\r\n64093   37784\r\n14460   94866\r\n89611   29795\r\n63056   22693\r\n80641   63078\r\n20065   76689\r\n53759   26262\r\n53429   91132\r\n33664   96758\r\n98954   27982\r\n18508   64233\r\n73654   60229\r\n36749   91132\r\n38704   77512\r\n58398   18000\r\n15407   42043\r\n79946   21014\r\n65603   21558\r\n37739   66393\r\n10565   36845\r\n12705   70406\r\n53419   63312\r\n76095   72348\r\n74185   84354\r\n38692   91132\r\n35982   13657\r\n20938   78148\r\n99256   18059\r\n21586   34696\r\n77045   12073\r\n83458   91132\r\n68485   11739\r\n19772   21014\r\n24490   91132\r\n82581   71791\r\n62633   18414\r\n39624   96758\r\n28147   90163\r\n53778   90163\r\n37875   23721\r\n95920   33634\r\n25986   80269\r\n97541   40536\r\n52877   60331\r\n94093   25047\r\n68569   13163\r\n93531   75209\r\n72106   23721\r\n88416   13149\r\n54125   27336\r\n98451   79877\r\n22883   86165\r\n70670   63113\r\n19738   50079\r\n87304   34696\r\n12339   36867\r\n10831   56006\r\n99160   40748\r\n51288   74418\r\n93577   58438\r\n84192   98833\r\n43597   34696\r\n92837   63078\r\n21981   13030\r\n53101   62867\r\n61701   98833\r\n23547   94866\r\n34215   90478\r\n90974   38157\r\n85904   32241\r\n14327   11808\r\n91673   47605\r\n55493   33743\r\n97416   50579\r\n64549   13172\r\n57965   20439\r\n58101   47605\r\n18375   71471\r\n69653   22813\r\n69096   27820\r\n87334   63903\r\n41580   24885\r\n11874   86165\r\n44957   34696\r\n86634   86165\r\n51588   22065\r\n92199   58293\r\n88542   22014\r\n22393   20439\r\n68666   11430\r\n39369   67038\r\n46682   50079\r\n76689   98833\r\n47130   81808\r\n13334   40847\r\n81359   99924\r\n25479   50453\r\n91035   86165\r\n86432   36668\r\n10750   39351\r\n22408   18607\r\n30205   94866\r\n17589   91292\r\n37538   34297\r\n22262   72524\r\n16278   91132\r\n24024   67674\r\n91132   47928\r\n94767   54350\r\n70645   56810\r\n88760   64557\r\n94730   67317\r\n13825   89274\r\n23899   61813\r\n22721   23721\r\n78866   40625\r\n40381   32386\r\n67302   21114\r\n83660   49990\r\n82973   48029\r\n46927   47605\r\n50994   59060\r\n75669   96471\r\n93198   42529\r\n63040   96758\r\n88017   16954\r\n85934   26663\r\n61221   49936\r\n34197   50579\r\n98843   45607\r\n42984   87664\r\n33387   35585\r\n96561   82166\r\n91974   91132\r\n29642   21398\r\n66503   65193\r\n52839   44772\r\n45836   95784\r\n12913   52263\r\n26079   88145\r\n77544   88929\r\n68347   60331\r\n87632   36867\r\n50438   64890\r\n52584   97599\r\n61632   37738\r\n98906   47605\r\n90893   24668\r\n10194   18767\r\n46785   21558\r\n51828   96758\r\n82148   94866\r\n77897   37738\r\n53368   98833\r\n18940   59455\r\n32696   54522\r\n71787   55930\r\n86247   26113\r\n56494   34297\r\n50696   58221\r\n43551   65193\r\n95395   26663\r\n64045   98833\r\n46544   54224\r\n86165   59770\r\n96117   64137\r\n98537   91132\r\n33444   22298\r\n54936   50579\r\n39368   99983\r\n82911   84250\r\n58265   58221\r\n95446   81144\r\n79820   20439\r\n89799   94866\r\n40876   98833\r\n42293   26663\r\n36637   97473\r\n19260   13172\r\n98277   62300\r\n62212   41226\r\n68970   87041\r\n43371   21558\r\n21067   26663\r\n75308   46978\r\n44869   53063\r\n49906   60331\r\n45217   63078\r\n50201   11923\r\n99156   34297\r\n20043   62082\r\n43242   27780\r\n47142   13172\r\n23278   20135\r\n78514   91048\r\n56171   92100\r\n27955   13172\r\n86709   83073\r\n96056   72524\r\n13890   26986\r\n82307   60522\r\n35357   28494\r\n34580   13172\r\n62727   41678\r\n21591   30862\r\n98258   76537\r\n74351   91132\r\n17843   91132\r\n23738   58221\r\n18389   58221\r\n65148   96758\r\n32995   55446\r\n51343   58221\r\n54522   31336\r\n90967   36845\r\n95431   26257\r\n57772   26663\r\n57712   93356\r\n52205   57920\r\n24262   76537\r\n47614   93956\r\n65408   60331\r\n50528   12543\r\n11005   60331\r\n10727   90163\r\n45279   21558\r\n92496   12711\r\n34096   42388\r\n12506   26663\r\n25503   11871\r\n39448   36845\r\n81314   54522\r\n66364   86165\r\n85889   14581\r\n39236   79223\r\n56055   26663\r\n90779   34297\r\n18166   72230\r\n53177   21014\r\n43673   81022\r\n36350   74055\r\n55270   96758\r\n65680   41704\r\n82812   87444\r\n50741   79868\r\n36155   91048\r\n14114   40755\r\n20019   37738\r\n84302   37412\r\n44026   68031\r\n34297   63388\r\n22061   89848\r\n71994   75669\r\n90335   63839\r\n39658   98833\r\n58540   26663\r\n34246   52806\r\n83116   82954")
    {
        protected override void Solve()
        {
            if (singleSentenceSolution)
            {
                SingleSentenceSolution();
            }
            else
            {
                Splitlines();
                List<int> list1 = [];
                List<int> list2 = [];
                foreach (string line in lines ?? [])
                {
                    string[] split = line.Split("   ");
                    list1.Add(int.Parse(split.First()));
                    list2.Add(int.Parse(split.Last()));
                }
                if (part1)
                {
                    list1.Sort();
                    list2.Sort();
                    for (int i = 0; i < list1.Count; i++)
                    {
                        result += Math.Abs(list1[i] - list2[i]);
                    }
                }
                else
                {
                    foreach (int number in list1)
                    {
                        result += number * list2.FindAll(x => x == number).Count;
                    }
                }
            }
        }

        protected override void SingleSentenceSolution() => result = Regex.Split(input, "\r\n").Aggregate(((List<int>)[], (List<int>)[]), (a, b) =>([.. a.Item1, int.Parse(b.Split("   ").First())], [.. a.Item2, int.Parse(b.Split("   ").ElementAt(1))]), lists => lists.Item1.OrderBy(x => x).ToList().ConvertAll(x => part1 ? x : x *= lists.Item2.FindAll(y => y == x).Count).Zip(lists.Item2.OrderBy(x => x))).Sum(pair => part1 ? Math.Abs(pair.First - pair.Second) : pair.First);
    }
}
